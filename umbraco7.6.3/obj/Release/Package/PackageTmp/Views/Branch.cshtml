@inherits Umbraco.Web.Mvc.UmbracoTemplatePage
@{
    Layout = "Master.cshtml";
}

@* the fun starts here *@
@{Html.RenderPartial("Breadcrumb"); }
<div class="row">
    <div class="col-md-2">
        @*@{Html.RenderPartial("Navigation Parent");}*@
        @{Html.RenderPartial("Navigation Child Pages");}
    </div>
    <div class="col-md-10">
        <div class="row">
            <div class="col-xs-12">
                @{
                    var image = Model.Content.GetPropertyValue<IPublishedContent>("pageImage");
                    if (image != null)
                    {
                        <img class="img-responsive" src="@image.GetPropertyValue("umbracoFile")" />
                    }
                }
                @Umbraco.Field("pageRTE")
            </div>
        </div>
        <div class="row">
            @{ var items = Model.Content.Children.Count();
                string name = Model.Content.Name;
                if (items > 0)
                {
                @returnHelper(name)
                    }
                }
        </div>
    </div>
</div>

@helper returnHelper(string name)
{
    var docType = "";
    switch (name)
    {
        case "Board":
            docType = "people";
            break;
        case "Events":
            docType = "event";
            break;
        case "Partners":
            docType = "partner";
            break;
        case "News":
            docType = "news";
            break;
        default:
            break;
    }

    var items = @Umbraco.TypedContentAtXPath("//" + docType);
    <ul>
        @foreach (var e in items)
        {
           <li>@e.Name</li>
        }
    </ul>
}